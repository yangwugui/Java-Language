
public class HelloWorld {

	public static void main(String[] args) {
		System.out.println("Hello, World!");
		
		// 1. 声明一个变量： 类型 变量名;
		// 变量时内存中一个命了名的空间，变量名不是这个空间的地址。
		// 变量名在运行时不存在，变量名在java文件存在，但是编译成的class文件中不存在了。
		int a ;
		
		// 2. 赋值语句：变量名 = 表达式;
		// 变量名  <- 表达式;
		// =不是等于的意思，而是把表达式的值计算出来，然后放到变量里面。
		// 变量名在等于号的左边出现：代表一个内存位置。
		a = 5 + 9;
		a = 6;  // 原来的14不存在了，现在a中方的是6
		a += 10; // 等效于 a = a + 10;  += 称作复合赋值运算符
		
		// 3. 初始化语句：类型 变量名 = 初始值; 
		// 在编译程序的时候确定一个变量的内存位置时预先放置一个数据。
		// 初始化放置数据是由编译程序时完成的，而不是像赋值语句一样在程序运行时完成。
		int x = 9;
		int y = 9 + 5;
		
		// 什么是表达式？什么是表达式的值？
		// 1. 一个数据就是表达式， 如字面量: 5, 6, "abcdef", 'a', 5.678, 
		// 2. 一个变量名称是表达式，如a，x, y等等，
		// 3. 表达式和表达式用运算符连接起来依然是表达式。
		// 4. 一个返回数值的方法调用是表达式，如： add(5,6)
		
		// 表达式只能在等于号的右侧出现，表达式的用途：
		// 1. 计算数据。
		// 2. 用于调用预先封装好的代码。
		// 3. 当变量名在等于号的右边出现（在表达式中），表示从变量所在位置取出内存中的数据
		
		x = a + y + 100;
		
		// 标识符：某个事物的名字，规范
		// 字母打头，慎用下划线打头，没有特殊原因不要使用除字母数字外的符号。
		// 最好是由含义的，并且是可以拼读的。
		// 除了结构化的命名规范外，不要仅仅用大小写来区别不同的名称
		// 当你觉得不好取名字的时候，往往需要重新整理自己的实现思路。
		
	}

}
